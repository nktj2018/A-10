module.exports=class Controller extends Objects{
	constructor(routings){
		super();
		this.request=routings;
		this.render=routings.route.action;
		this.__sendViewdata=null;
		this.__setHeader=null;
		this.__redirected=false;
	}
	setting(){}
	logic_before(){}
	logic_after(){}
	//setData
	setData(name,value){
		if(!this.__sendViewdata){
			this.__sendViewdata={};
		}
		this.__sendViewdata[name]=value;
	}
	//setHeader
	setHeader(name,value){
		if(!this.__setHeader){
			this.__setHeader={};
		}
		this.__setHeader[name]=value;
	}
	//redirect
	redirect(url){
		this.__redirected=url;
	}
	//tourl
	toUrl(url){
		
	}
	__renderingings(res,output){

		// redirected...
		if(this.__redirected){
			res.writeHead(301,{
				"Location":this.__redirected,
			});
			res.end();
			return;
		}

		if(!config.content_type){
			config.content_type="text/html";
		}
		if(!config.charset){
			config.charset="utf-8";
		}

		var setHeader={
			'Content-Type': config.content_type,
			'charset':config.charset
		};

		if(this.__setHeader){
			var setHeaderColum=Object.keys(this.__setHeader);
			for(var n1=0;n1<setHeaderColum.length;n1++){
				setHeader[setHeaderColum[n1]]=this.__setHeader[setHeaderColum[n1]];
			}
		}

		res.writeHead(200, setHeader);

		if(output!=undefined){
			res.write(output);
		}

		try{

			var elementPath="./app/Render/Element/";

			if(this.render){
				var renderPath="./app/Render/View/"+this.constructor.name.replace("_Controller","")+"/"+this.render+".view";
			}

			if(this.layout){
				if(this.render){
					var layoutPath="./app/Render/Layout/"+this.layout+".view";
					var view=new View(res,layoutPath,this.__sendViewdata,{
						mode:"layout",
						contentPath:renderPath,
						elementPath:elementPath,
						request:this.request,
					});
				}
			}
			else
			{
				if(this.render){
					var view=new View(res,renderPath,this.__sendViewdata,{
						mode:"view",
						elementPath:elementPath,
						request:this.request,
					});
				}
			}
		}catch(err){
			console.log(err);
		}
		res.end();

	}
}
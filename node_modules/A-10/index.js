// =======================================================================
// 
//
// index.js
//
//
// =======================================================================

const http=require('http');
global.fs=require("fs");

global.A10EJS=require("A10EJS");

global.func=require("./function.js");
global.errors=require("./error.js");
global.Objects=require("./Objects.js");
global.Controller=require("./Controller.js");
global.View=require("./View.js");

global.mime=require("../../app/Config/mime.js");
global.config=require("../../app/Config/config.js");
global.rt_web=require("../../app/Config/routing-web.js");

module.exports={

	listen:function(port){

		console.log(func.getDate()+" Server Start (PORT="+port+")"); 

		var routes=require("./routes.js");
		var publics=require("./publics.js");

		var server = http.createServer(function(request, response){

			routes.check(request).then(function(routing){

				//console.log(routing);

				var errView=false;
				var write_output="";

				if(routing.route){
					if(routing.route.controller){

						try{
							fs.statSync("./app/Controller/"+routing.route.controller+"_Controller.js");

							const Controller=require("../../app/Controller/"+routing.route.controller+"_Controller.js");
							var controller=new Controller({
								action:routing.route.action,
							});

							//setting..
							controller.setting();

							var pc=Promise.resolve();
							pc.then(function(){

								if(controller.logic_before){
									return new Promise(function(resolve){
										var cb_=controller.logic_before();

										if(cb_ instanceof Promise){

											cb_.then(function(rest){
												if(rest){
													write_output+=rest;
												}
												resolve();
											});

										}
										else
										{
											if(typeof(cb_)=="string"){
												write_output+=cb_;
											}
											resolve();
										}
									});
								}
							}).then(function(){
								if(controller[routing.route.action]){
									return new Promise(function(resolve){
										var cc_=controller[routing.route.action]();

										if(cc_ instanceof Promise){
											cc_.then(function(rest){
												if(rest){
													write_output+=rest;
												}
												resolve();
											});
										}
										else
										{
											if(typeof(cc_)=="string"){
												write_output+=cc_;
											}
											resolve();
										}
									});
								}
							}).then(function(){
								if(controller.logic_after){
									return new Promise(function(resolve){
										var ca_=controller.logic_after();

										if(ca_ instanceof Promise){
											ca_.then(function(rest){
												if(rest){
													write_output+=rest;
												}
												resolve();
											});
										}
										else
										{
											if(typeof(ca_)=="string"){
												write_output+=ca_;
											}
											resolve();
										}
									});
								}
							}).then(function(){

								//rendering
								controller.__renderingings(response,write_output);

							});

						}catch(err){
							console.log(err);
							errView=true;
						}

						if(errView){
					        response.writeHead(200, {'Content-Type': 'text/html'});
					        response.write('<!DOCTYPE html>');
					        response.write('<html lang="ja">');
					        response.write('NOT FOUND!');
					        response.write('</html>');
					        response.end();
						}
					}
				}
				else if(publics.check(request.url)){
					publics.load(request.url,response);
				}
				else
				{
			        response.writeHead(404, {'Content-Type': 'text/html'});
			        response.end();
				}

			});
		
	    }).listen(port);
	}

};
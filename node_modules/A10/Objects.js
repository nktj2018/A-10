module.exports=class Objects{
	constructor(routings){
		this.request=routings;
	}
	setting(){

		// component loading
		if(this.components){
			var compoColum=Object.keys(this.components);
			for(var n1=0;n1<compoColum.length;n1++){
				this.add_component(compoColum[n1],this.components[compoColum[n1]]);
			}
		}

		// model loading
		if(this.models){
			var modelColum=Object.keys(this.models);
			for(var n1=0;n1<modelColum.length;n1++){
				this.add_model(modelColum[n1],this.models[modelColum[n1]]);
			}
		}
		// validation loading
		if(this.validations){
			var valideColum=Object.keys(this.validations);
			for(var n1=0;n1<valideColum.length;n1++){
				this.add_validation(valideColum[n1],this.validations[valideColum[n1]]);
			}
		}
/*
		// helper loading
		if(this.helpers){
			var helperColum=Object.keys(this.helpers);
			for(var n1=0;n1<valideColum.length;n1++){
				this.add_helper(valideColum[n1],this.validations[valideColum[n1]]);
			}

		}
*/
	}
	add_component(name,option){

		var compo_name=func.snake_case(name);
		var compo_filename=func.snake_case(name)+"_Component.js";

		var compoPath="../../app/Component/"+compo_filename;
		var compoPathDef="./defComponent/"+compo_filename;

		var enabled=false;
		var Component0=null;
		try{
			Component0=require(compoPath);
			enabled=true;
		}catch(err){}

		if(!enabled){
			try{
				Component0=require(compoPathDef);
				enabled=true;
			}catch(err){}
		}
		if(enabled){
			var NC=new Component0(this.request);
			this[compo_name]=NC;
			if(typeof(option)=="object"){
				this[compo_name].optData=option;
			}
		}
	}
	add_model(name,option){
		var model_name=func.snake_case(name);
		var model_filename=func.snake_case(name)+".js";

		var modelPath="../../app/Models/Model/"+model_filename;

		var enabled=false;
		try{
			var Model0=require(modelPath);
			enabled=true;
		}catch(err){}

		if(enabled){
			var MO=new Model0(this.request);
			this[model_name]=MO;
			if(typeof(option)=="object"){
				this[model_name].optData=option;
			}
		}
	}
	add_validation(name,option){
		var valide_name=func.snake_case(name);
		var valide_filename=func.snake_case(name)+".js";

		var validePath="../../app/Models/Validation/"+valide_filename;


		var enabled=false;
		try{
			var Validation0=require(validePath);
			enabled=true;
		}catch(err){}

		if(enabled){
			var VI=new Validation0(this.request);
			this[valide_name]=VI;
			if(typeof(option)=="object"){
				this[valide_name].optData=option;
			}
		}
	}
}